@using IdentityServerAspNetIdentity.Pages.Components.AddScript
@model IdentityServerAspNetIdentity.Pages.Components.HtmlModal.ModalViewModel 

<link rel="stylesheet" href="~/@(nameof(IdentityServerAspNetIdentity)).styles.css" />
<dialog id="@Model.ModalId">
    <h2>@Model.ModalTitle</h2>
    <p>@Model.Prompt</p>

    @foreach (var input in Model.Inputs)
    {
        <div class="form-group">
            <label for="@input.InputId">@input.InputLabel</label>
            <input
                type="@(!string.IsNullOrEmpty(input.InputType) ? input.InputType : "text")"
                class="form-control"
                id="@input.InputId"
                name="@input.InputId"
                @(string.IsNullOrEmpty(input.InputPlaceholder) ? string.Empty : $"placeholder='{input.InputPlaceholder}'")
                @(input.Required.HasValue && input.Required.Value ? "required" : string.Empty) 
                value="@input.InputDefaultValue"
                />
        </div>
    }
    

    <div class="button-container">
        @if (!string.IsNullOrEmpty(Model.ConfirmButtonFunction))
        {
            <button id="@($"confirmButton{@Model.ModalId}")" type="button" class="success-button" onclick="@($"{Model.ConfirmButtonFunction}")">@Model.ConfirmButtonText</button>
        }
        <button id="@($"closeButton{@Model.ModalId}")"  type="button" class="danger-button" data-ck-modal-target-close="@Model.ModalId">@Model.CancelButtonText</button>
    </div>
</dialog>

<script>
    document.getElementById(`@($"confirmButton{@Model.ModalId}")`).addEventListener('click', function () {
        if (document.getElementById('@Model.ModalId')) {
            
            // clear the inputs
            document.querySelectorAll('#@Model.ModalId input').forEach(input => {
                input.value = '';
            });            
            document.getElementById('@Model.ModalId').close();
        }
    });
    
</script>

@{
    var setOpenModalsButton = @"     
    document.addEventListener('DOMContentLoaded', function() {
        const openButtons = document.querySelectorAll('[data-ck-modal-target]');
        openButtons.forEach(button => {
            button.addEventListener('click', function () {
            const targetDialogId = this.getAttribute('data-ck-modal-target');
            const targetDialog = document.getElementById(targetDialogId);
            if (targetDialog) {
                targetDialog.showModal();
            }
            });
        });
    });
    ";

    var setCloseModalsButton = @"           document.addEventListener('DOMContentLoaded', function() {
        const closeButtons = document.querySelectorAll('[data-ck-modal-target-close]');
        closeButtons.forEach(button => {
            button.addEventListener('click', function (event) {
            event.preventDefault();
            const targetDialogId = this.getAttribute('data-ck-modal-target-close');
            const targetDialog = document.getElementById(targetDialogId);
            if (targetDialog) {
                targetDialog.close();
            }
        });
    });
    });";
}

<vc:add-script script="@setOpenModalsButton"></vc:add-script>
<vc:add-script script="@setCloseModalsButton"></vc:add-script>