@using IdentityServerAspNetIdentity.Pages.Components.HtmlModal
@using IdentityServerAspNetIdentity.Pages.Components.HtmlSelectionDialog
@using IdentityServerAspNetIdentity.Pages.Components.SelectionItem
@using Microsoft.EntityFrameworkCore
@model IdentityServerAspNetIdentity.Pages.Components.SelectionContainer.SelectionContainerViewModel


<div class="check-selection-container " id="@Model.Id">


    @if (@Model.Source != null)
    {
        @foreach (var item in Model.Source)
        {
            bool isChecked = Model.Selected?.Contains(item) == true;
            var details = "";
            if (Model.SourceDetails.ContainsKey(@item))
            {
                details = Model.SourceDetails[@item];
            }
            <vc:selection-item name="@Model.Name" is-checked="@isChecked" value="@item" as-radio="@Model.AsRadio" description="@details"/>
        }

    @if (Model.AllowAdd)
        {
            var templateId = @Model.Id + "Template";
            var modalId = @Model.Id + "Modal";

            <button type="button" class="secondary-button" data-ck-modal-target="@modalId">
                Add @Model.Title </button>

            <template id="@templateId">
                <vc:selection-item name="@Model.Name" is-checked="true" value=""/>

            </template>

            var function = $@"addNewItem('{@Model.Title}','new{@Model.Id}Input','{@Model.Id}Template','{@Model.Id}','check-selection-item')";

            @if (Model.AddFromDatasource != null)
            {
                var addFromDatasourceModalViewModel = new HtmlSelectionViewModel(
                @modalId,
                    "Add " + @Model.Title + " from Datasource",
                    "Select the " + @Model.Title + " to add:",
                    "Add",
                    "Close",
                    function,
                    "addFromDatasourceInput",
                    null,
                    Model.AddFromDatasource
                );

                <vc:html-selection-dialog model="addFromDatasourceModalViewModel"/>   
            }
            else
            {

                var newRoleModalViewModel = new ModalViewModel(
                    @modalId,
                    "Add New " + @Model.Title,
                    "Enter the following information:",
                    "Add " + @Model.Title,
                    "Close",
                    function,
                    new ModalInputs($"new{@Model.Id}Input", @Model.Title)
                );

                <vc:html-modal model="newRoleModalViewModel"/>
            }
        }
    }

</div>

