@using IdentityServerAspNetIdentity.Pages.Components.HtmlModal
@model IdentityServerAspNetIdentity.Pages.Components.StringArrayContainer.StringArrayContainerViewModel



<div class="  @Model.CssClass">
    <div class="form-row text-form-row">
        <label class="form-label">@Model.Title</label>
        <div class="text-array-container " id="@Model.Id">
            @{
                var modelIdContainer = Model.Id + "-container";
            }
            <div id="@modelIdContainer" >
            @if (!Model.Current.Any())
            {
                <label class="empty-list-label">
                    No entries for @Model.Title
                </label>
            }

            @for (int sourceIndex = 0; sourceIndex < Model.Current.Count(); sourceIndex++)
            {

                var item = Model.Current.ElementAt(sourceIndex);

                var name = @Model.Name.Replace("[", "").Replace("]", "") + "[" + sourceIndex.ToString() + "]";
                var currentId = @Model.Name.Replace("[", "").Replace("]", "") + "-" + sourceIndex;

                <div class="text-array-container-row">
                    <input
                        name="@name"
                        value="@item"
                        type="text"
                        aria-label="amend @Model.Title"
                        class="form-input"/>

                    @if (Model.AllowDelete)
                    {

                        <button type="button" id="toggle-button-@sourceIndex" class="delete-icon-button"
                                onclick="toggleRemoveForStringContainer(this, '@Model.DeletedItemsName')"></button>
                    }
                </div>

            }

            <input type="hidden" name="@Model.DeletedItemsName" value=""/>

            </div>


    @if (Model.AllowAdd)
    {
        var modalId = $"{Model.Id}Modal";
        var templateId = $"{Model.Id}Template";
        var newInputId = $"new{Model.Id}Input";
        var countId = $"{Model.Id}Count";
            
        var function = $@"addNewTextInputFromTemplate('{@templateId}','{@modelIdContainer}','{@newInputId}','{@countId}')";
        
        <input type="hidden" id="@countId" value="@Model.Current.Count()"/>


        <template id="@templateId">
            @{ var name = @Model.Name.Replace("[", "").Replace("]", "") + "[_replace-with-index_]"; }
            <div class="text-array-container-row">
                <input
                    name="@name"
                    value=""
                    type="text"
                    aria-label="amend @Model.Title"
                    class="form-input"/>
                @if (Model.AllowDelete)
                {
                    <button type="button" id="toggle-button-_replace-with-index_" class="delete-icon-button"
                            onclick="toggleRemoveForStringContainer(this, '@Model.DeletedItemsName')"></button>
                }
            </div>


        </template>
        <label for="@newInputId" class="hidden">Create new</label>
        
        <div class="text-array-container-row">
            <input id="@newInputId" class="form-input" type="text"/>
            <button
                type="button"
                class="add-icon-button btn-small"
                aria-label="Add @Model.Title"
                @* data-ck-modal-target="@modalId" *@
                onclick="@function"
                >
            </button>
        </div>

      
        
    }
</div>
    </div>
</div>

